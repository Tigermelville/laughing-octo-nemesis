# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="A5ilgJ?<lXP<IWrewFd2_SQ;V;_3>HRcvnEIcxX@Xjh9:@[5rthwppmpHcXqpq3b"

# The application languages
# ~~~~~
application.langs="en"

# Database configuration
db.default.driver=org.postgresql.Driver
db.default.url="postgres://shorty:shrty@localhost/shortydev"
postgres.url="jdbc:postgresql://localhost/shortydev"
postgres.user="shorty"
postgres.passwd="shrty"

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# #############################################################
# IF YOU CHANGE ANYTHING BELOW HERE, run the test suite
# in test.ShortyTest.  It validates your changes and save you
# much embarrassment
# #############################################################

# The host where the Shorty service is deployed
# Shortened urls will have the format {shorty.host}/encodedUri
#
# If {shorty} does specify a port number, then the shorty service
# depends on you forwarding port 80(if the shorty.host uses http
# transport) or port 443 (for https) to a port running the service,
# since shortened urls should not contain a port number, for purposes
# of brevity.  But you can use a port number if you want, see below.
#
# The test suite in test.ShortyTest verifies that this url
# starts with http:// or https://, but stops short of asserting
# that no port is specified.  So if production issues force
# you to use an url like http://productionhost.notclearontheconcept.com:12345
# then the test suite will give you a pass
#
shorty.host = "http://disc.org"

# The digit sequence used for base-64 encoding.  The test
# suite in test.ShortyTest checks that there are 64 characters
# here, that they are legitimate unescaped url characters,
# and that they are unique
#
shorty.digits = "opqrstuvwxyzABCDEFmnPQRSTUV-WXYZ_01234GHIJKLMNOabcdefghijkl56789"
